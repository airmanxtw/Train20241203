#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Train20241203.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertCounMaster(CounMaster instance);
    partial void UpdateCounMaster(CounMaster instance);
    partial void DeleteCounMaster(CounMaster instance);
    partial void InsertCounSubject(CounSubject instance);
    partial void UpdateCounSubject(CounSubject instance);
    partial void DeleteCounSubject(CounSubject instance);
    partial void InsertStud(Stud instance);
    partial void UpdateStud(Stud instance);
    partial void DeleteStud(Stud instance);
    partial void InsertSchoolClass(SchoolClass instance);
    partial void UpdateSchoolClass(SchoolClass instance);
    partial void DeleteSchoolClass(SchoolClass instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CounMaster> CounMaster
		{
			get
			{
				return this.GetTable<CounMaster>();
			}
		}
		
		public System.Data.Linq.Table<CounSubject> CounSubject
		{
			get
			{
				return this.GetTable<CounSubject>();
			}
		}
		
		public System.Data.Linq.Table<CounSubjectRecord> CounSubjectRecord
		{
			get
			{
				return this.GetTable<CounSubjectRecord>();
			}
		}
		
		public System.Data.Linq.Table<Stud> Stud
		{
			get
			{
				return this.GetTable<Stud>();
			}
		}
		
		public System.Data.Linq.Table<SchoolClass> SchoolClass
		{
			get
			{
				return this.GetTable<SchoolClass>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CounMaster")]
	public partial class CounMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CMID;
		
		private string _UserName;
		
		private string _Userid;
		
		private char _Gender;
		
		private string _Tel;
		
		private string _DeptNo;
		
		private string _DeptName;
		
		private string _CMQuest;
		
		private char _CMState;
		
		private string _Receiver;
		
		private System.DateTime _ApplyDate;
		
		private char _Position;
		
		private System.Nullable<System.DateTime> _ContactDate;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private string _ReceiverName;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMIDChanging(int value);
    partial void OnCMIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUseridChanging(string value);
    partial void OnUseridChanged();
    partial void OnGenderChanging(char value);
    partial void OnGenderChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnDeptNoChanging(string value);
    partial void OnDeptNoChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnCMQuestChanging(string value);
    partial void OnCMQuestChanged();
    partial void OnCMStateChanging(char value);
    partial void OnCMStateChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnApplyDateChanging(System.DateTime value);
    partial void OnApplyDateChanged();
    partial void OnPositionChanging(char value);
    partial void OnPositionChanged();
    partial void OnContactDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContactDateChanged();
    partial void OnCloseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateChanged();
    partial void OnReceiverNameChanging(string value);
    partial void OnReceiverNameChanged();
    #endregion
		
		public CounMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CMID
		{
			get
			{
				return this._CMID;
			}
			set
			{
				if ((this._CMID != value))
				{
					this.OnCMIDChanging(value);
					this.SendPropertyChanging();
					this._CMID = value;
					this.SendPropertyChanged("CMID");
					this.OnCMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1) NOT NULL")]
		public char Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptNo", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string DeptNo
		{
			get
			{
				return this._DeptNo;
			}
			set
			{
				if ((this._DeptNo != value))
				{
					this.OnDeptNoChanging(value);
					this.SendPropertyChanging();
					this._DeptNo = value;
					this.SendPropertyChanged("DeptNo");
					this.OnDeptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMQuest", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string CMQuest
		{
			get
			{
				return this._CMQuest;
			}
			set
			{
				if ((this._CMQuest != value))
				{
					this.OnCMQuestChanging(value);
					this.SendPropertyChanging();
					this._CMQuest = value;
					this.SendPropertyChanged("CMQuest");
					this.OnCMQuestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMState", DbType="Char(1) NOT NULL")]
		public char CMState
		{
			get
			{
				return this._CMState;
			}
			set
			{
				if ((this._CMState != value))
				{
					this.OnCMStateChanging(value);
					this.SendPropertyChanging();
					this._CMState = value;
					this.SendPropertyChanged("CMState");
					this.OnCMStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="VarChar(100)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ApplyDate
		{
			get
			{
				return this._ApplyDate;
			}
			set
			{
				if ((this._ApplyDate != value))
				{
					this.OnApplyDateChanging(value);
					this.SendPropertyChanging();
					this._ApplyDate = value;
					this.SendPropertyChanged("ApplyDate");
					this.OnApplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Char(1) NOT NULL")]
		public char Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDate", DbType="Date")]
		public System.Nullable<System.DateTime> ContactDate
		{
			get
			{
				return this._ContactDate;
			}
			set
			{
				if ((this._ContactDate != value))
				{
					this.OnContactDateChanging(value);
					this.SendPropertyChanging();
					this._ContactDate = value;
					this.SendPropertyChanged("ContactDate");
					this.OnContactDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="Date")]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverName", DbType="NVarChar(50)")]
		public string ReceiverName
		{
			get
			{
				return this._ReceiverName;
			}
			set
			{
				if ((this._ReceiverName != value))
				{
					this.OnReceiverNameChanging(value);
					this.SendPropertyChanging();
					this._ReceiverName = value;
					this.SendPropertyChanged("ReceiverName");
					this.OnReceiverNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CounSubject")]
	public partial class CounSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CSID;
		
		private string _CSNo;
		
		private char _CSGroup;
		
		private string _CSItem;
		
		private string _CSText;
		
		private int _CSSeq;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCSIDChanging(int value);
    partial void OnCSIDChanged();
    partial void OnCSNoChanging(string value);
    partial void OnCSNoChanged();
    partial void OnCSGroupChanging(char value);
    partial void OnCSGroupChanged();
    partial void OnCSItemChanging(string value);
    partial void OnCSItemChanged();
    partial void OnCSTextChanging(string value);
    partial void OnCSTextChanged();
    partial void OnCSSeqChanging(int value);
    partial void OnCSSeqChanged();
    #endregion
		
		public CounSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CSID
		{
			get
			{
				return this._CSID;
			}
			set
			{
				if ((this._CSID != value))
				{
					this.OnCSIDChanging(value);
					this.SendPropertyChanging();
					this._CSID = value;
					this.SendPropertyChanged("CSID");
					this.OnCSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CSNo
		{
			get
			{
				return this._CSNo;
			}
			set
			{
				if ((this._CSNo != value))
				{
					this.OnCSNoChanging(value);
					this.SendPropertyChanging();
					this._CSNo = value;
					this.SendPropertyChanged("CSNo");
					this.OnCSNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSGroup", DbType="Char(1) NOT NULL")]
		public char CSGroup
		{
			get
			{
				return this._CSGroup;
			}
			set
			{
				if ((this._CSGroup != value))
				{
					this.OnCSGroupChanging(value);
					this.SendPropertyChanging();
					this._CSGroup = value;
					this.SendPropertyChanged("CSGroup");
					this.OnCSGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSItem", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CSItem
		{
			get
			{
				return this._CSItem;
			}
			set
			{
				if ((this._CSItem != value))
				{
					this.OnCSItemChanging(value);
					this.SendPropertyChanging();
					this._CSItem = value;
					this.SendPropertyChanged("CSItem");
					this.OnCSItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CSText
		{
			get
			{
				return this._CSText;
			}
			set
			{
				if ((this._CSText != value))
				{
					this.OnCSTextChanging(value);
					this.SendPropertyChanging();
					this._CSText = value;
					this.SendPropertyChanged("CSText");
					this.OnCSTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSSeq", DbType="Int NOT NULL")]
		public int CSSeq
		{
			get
			{
				return this._CSSeq;
			}
			set
			{
				if ((this._CSSeq != value))
				{
					this.OnCSSeqChanging(value);
					this.SendPropertyChanging();
					this._CSSeq = value;
					this.SendPropertyChanged("CSSeq");
					this.OnCSSeqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CounSubjectRecord")]
	public partial class CounSubjectRecord
	{
		
		private int _CMID;
		
		private int _CSID;
		
		private string _CSRValue;
		
		public CounSubjectRecord()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMID", DbType="Int NOT NULL")]
		public int CMID
		{
			get
			{
				return this._CMID;
			}
			set
			{
				if ((this._CMID != value))
				{
					this._CMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSID", DbType="Int NOT NULL")]
		public int CSID
		{
			get
			{
				return this._CSID;
			}
			set
			{
				if ((this._CSID != value))
				{
					this._CSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSRValue", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CSRValue
		{
			get
			{
				return this._CSRValue;
			}
			set
			{
				if ((this._CSRValue != value))
				{
					this._CSRValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stud")]
	public partial class Stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _studNo;
		
		private string _studName;
		
		private int _score;
		
		private System.DateTime _createDate;
		
		private string _classNo;
		
		private EntityRef<SchoolClass> _SchoolClass;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudNoChanging(string value);
    partial void OnstudNoChanged();
    partial void OnstudNameChanging(string value);
    partial void OnstudNameChanged();
    partial void OnscoreChanging(int value);
    partial void OnscoreChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OnclassNoChanging(string value);
    partial void OnclassNoChanged();
    #endregion
		
		public Stud()
		{
			this._SchoolClass = default(EntityRef<SchoolClass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string studNo
		{
			get
			{
				return this._studNo;
			}
			set
			{
				if ((this._studNo != value))
				{
					this.OnstudNoChanging(value);
					this.SendPropertyChanging();
					this._studNo = value;
					this.SendPropertyChanged("studNo");
					this.OnstudNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string studName
		{
			get
			{
				return this._studName;
			}
			set
			{
				if ((this._studName != value))
				{
					this.OnstudNameChanging(value);
					this.SendPropertyChanging();
					this._studName = value;
					this.SendPropertyChanged("studName");
					this.OnstudNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Int NOT NULL")]
		public int score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classNo", DbType="VarChar(4)")]
		public string classNo
		{
			get
			{
				return this._classNo;
			}
			set
			{
				if ((this._classNo != value))
				{
					if (this._SchoolClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclassNoChanging(value);
					this.SendPropertyChanging();
					this._classNo = value;
					this.SendPropertyChanged("classNo");
					this.OnclassNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolClass_Stud", Storage="_SchoolClass", ThisKey="classNo", OtherKey="classNo", IsForeignKey=true)]
		public SchoolClass SchoolClass
		{
			get
			{
				return this._SchoolClass.Entity;
			}
			set
			{
				SchoolClass previousValue = this._SchoolClass.Entity;
				if (((previousValue != value) 
							|| (this._SchoolClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolClass.Entity = null;
						previousValue.Stud.Remove(this);
					}
					this._SchoolClass.Entity = value;
					if ((value != null))
					{
						value.Stud.Add(this);
						this._classNo = value.classNo;
					}
					else
					{
						this._classNo = default(string);
					}
					this.SendPropertyChanged("SchoolClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolClass")]
	public partial class SchoolClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _classNo;
		
		private string _className;
		
		private EntitySet<Stud> _Stud;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassNoChanging(string value);
    partial void OnclassNoChanged();
    partial void OnclassNameChanging(string value);
    partial void OnclassNameChanged();
    #endregion
		
		public SchoolClass()
		{
			this._Stud = new EntitySet<Stud>(new Action<Stud>(this.attach_Stud), new Action<Stud>(this.detach_Stud));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classNo", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string classNo
		{
			get
			{
				return this._classNo;
			}
			set
			{
				if ((this._classNo != value))
				{
					this.OnclassNoChanging(value);
					this.SendPropertyChanging();
					this._classNo = value;
					this.SendPropertyChanged("classNo");
					this.OnclassNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_className", DbType="NChar(10)")]
		public string className
		{
			get
			{
				return this._className;
			}
			set
			{
				if ((this._className != value))
				{
					this.OnclassNameChanging(value);
					this.SendPropertyChanging();
					this._className = value;
					this.SendPropertyChanged("className");
					this.OnclassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolClass_Stud", Storage="_Stud", ThisKey="classNo", OtherKey="classNo")]
		public EntitySet<Stud> Stud
		{
			get
			{
				return this._Stud;
			}
			set
			{
				this._Stud.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stud(Stud entity)
		{
			this.SendPropertyChanging();
			entity.SchoolClass = this;
		}
		
		private void detach_Stud(Stud entity)
		{
			this.SendPropertyChanging();
			entity.SchoolClass = null;
		}
	}
}
#pragma warning restore 1591
